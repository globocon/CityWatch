@page
@using CityWatch.Data.Helpers
@using CityWatch.Data.Models
@using CityWatch.Web.Helpers
@using CityWatch.Web.Services
@using Microsoft.Extensions.Configuration
@model CityWatch.Web.Pages.Incident.RegisterModel
@inject IViewDataService viewDataService
@inject IConfiguration Configuration
@{
    ViewData["Title"] = "CityWatch Security | Incident Report";
    ViewData["PageName"] = CityWatch.Web.Helpers.PageNameHelper.Register;
    var mapSettings = @Configuration.GetSection("GoogleMap").Get(typeof(GoogleMapSettings)) as GoogleMapSettings;
    var ApiKey = mapSettings.ApiKey;
    //to get the ids of  feedback type colourcodes and the general -start
    var colourcode = @Model.ConfigDataProiver.GetFeedbackTypesId("Colour Codes");
    var general = @Model.ConfigDataProiver.GetFeedbackTypesId("General");
    //to get the ids of  feedback type colourcodes and the general -end
}
<div id="loader"></div>
<div class="row my-3 my-md-2">
    <div class="col">
        <p>
            This form is designed for Security Guards / Fire Support Offices (FSO) / COVID Marshalls or Patrol Cars, to record
            and report any issues or incidents they find during their shift, pertaining to:
        </p>
    </div>
</div>
<form method="post" enctype="multipart/form-data" id="cwsir-form">
    <!-- Event Type -->
    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <h4 class="card-header">Event Type</h4>
                <div class="card-body" id="events-list">
                    <div class="form-check event-type-check">
                        <label class="form-check-label">HR related; Staff Sick; Staff Late; Shift Swaps; Extra Guard Requests; Overtime</label>
                        <input asp-for="@Model.Report.EventType.HrRelated" class="form-check-input event-type">
                    </div>
                    <div class="form-check event-type-check">
                        <label class="form-check-label">OH&S matters; including "near misses"; onsite injuries; First Aid; Inclimate Weather; Patrol KPI Issues</label>
                        <input asp-for="@Model.Report.EventType.OhsMatters" class="form-check-input event-type">
                    </div>
                    <div class="form-check event-type-check">
                        <label class="form-check-label">Security / Site Policy Breach; Physical Break in's / Theft; Suspect Arrest; Assault; Key Lock / Access issues</label>
                        <input asp-for="@Model.Report.EventType.SecurtyBreach" class="form-check-input event-type">
                    </div>
                    <div class="form-check event-type-check">
                        <label class="form-check-label">Equipment damage or loss; Maintenance Issues, Missing Items (not Theft); Uniform Request;</label>
                        <input asp-for="@Model.Report.EventType.EquipmentDamage" class="form-check-input event-type">
                    </div>
                    <div class="form-check event-type-check">
                        <label class="form-check-label">CCTV related OR Thermal Temperature Variations <em class="text-muted">(mention the dropbox *.jpg / *.mp4 file names)</em></label>
                        <input asp-for="@Model.Report.EventType.Thermal" class="form-check-input event-type">
                    </div>
                    <div class="form-check event-type-check">
                        <label class="form-check-label">Emergency Services on Site; inc Police, other LEA engagement, Ambulance or Fire Fighting Responses;</label>
                        <input asp-for="@Model.Report.EventType.Emergency" class="form-check-input event-type">
                    </div>
                    <div class="form-check event-type-check">
                        <label class="form-check-label">
                            <div class="d-flex flex-row align-content-start flex-wrap">
                                <span>Site COLOUR Code Alert <em class="text-muted">(Code Blue, Code Grey, Code Yellow, etc)</em></span>
                                @*<select asp-for="@Model.Report.SiteColourCodeId" class="form-control form-control-sm ml-0 ml-lg-2 w-75" disabled asp-items="@Model.ViewDataService.GetFeedbackTemplatesByType(FeedbackType.ColourCodes)"></select>*@
                                @*Template type is directly taken from database -jisha-start *@
                                <select asp-for="@Model.Report.SiteColourCodeId" class="form-control form-control-sm ml-0 ml-lg-2 w-75" disabled asp-items="@Model.ViewDataService.GetFeedbackTemplatesByType(Convert.ToInt16(colourcode))"></select>
                                @*Template type is directly taken from database -jisha-end *@
                                <input type="hidden" asp-for="@Model.Report.SiteColourCode" />
                            </div>
                        </label>
                        <input asp-for="@Model.Report.EventType.SiteColour" class="form-check-input event-type">
                    </div>
                    <div class="form-check event-type-check">
                        <label class="form-check-label">Department of Health - Restraints or Seclusion / Isolation / SASH Watch</label>
                        <input asp-for="@Model.Report.EventType.HealthDepart" class="form-check-input event-type">
                    </div>
                    <div class="form-check event-type-check">
                        <label class="form-check-label">General Security Patrol / Site "Lock-up" / Site "Unlock" <em class="text-muted">(Checking Status of Client Site or Home)</em></label>
                        <input asp-for="@Model.Report.EventType.GeneralSecurity" class="form-check-input event-type">
                    </div>
                    <div class="form-check event-type-check">
                        <label class="form-check-label">Alarm is Active <em class="text-muted">(Security Alarm Panel, Fire Panel, VESDA, Duress, or other equipment)</em></label>
                        <input asp-for="@Model.Report.EventType.AlarmActive" class="form-check-input event-type">
                    </div>
                    <div class="form-check event-type-check">
                        <label class="form-check-label">Alarm is Disabled <em class="text-muted">(Late to Close / site not sealed)</em></label>
                        <input asp-for="@Model.Report.EventType.AlarmDisabled" class="form-check-input event-type">
                    </div>
                    <div class="form-check event-type-check">
                        <label class="form-check-label">Client or Authorised person was still onsite <em class="text-muted">(ie: not an intruder)</em></label>
                        <input asp-for="@Model.Report.EventType.AuthorisedPerson" class="form-check-input event-type">
                    </div>
                    <div class="form-check event-type-check">
                        <label class="form-check-label">Were you carrying a Batton &/or Handcuffs &/or Firearm, or wearing a Ballistic Vest?</label>
                        <input asp-for="@Model.Report.EventType.Equipment" class="form-check-input event-type">
                    </div>
                    <div class="form-check event-type-check">
                        <label class="form-check-label">Other Categories, including Feedback, Suggestions, Compliments, and Complaints</label>
                        <input asp-for="@Model.Report.EventType.Other" class="form-check-input event-type">
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4 mt-3 mt-md-0">
             <div class="card h-30">
                <h4 class="card-header">PSPF</h4>
                 <div class="card-body">
                    <div class="form-row">
                        <select asp-for="@Model.Report.PSPFName" class="form-control" asp-items="@Model.ViewDataService.PSPFType"></select>
                        </div>
                        </div>
                 </div>
                 <br />
            <div class="card h-40">
                <h4 class="card-header">IoT</h4>
                <div class="card-body" style="padding-top:0px">
                    <div class="form-row">
                        <div class="col-4">
                            <img src="~/images/smartWAND.jpg" alt="Smart WAND" class="img-fluid" max-height="150px">
                        </div>
                        <div class="col-6">
                            <h6 class="pt-lg-2">Was Smart WAND used to Create (3B) <u>or</u> <br />Register (3A) this IR?</h6>
                            <div class="form-check pt-3">
                                <input asp-for="@Model.Report.WandScannedYes3a" class="form-check-input">
                                <label class="form-check-label fw-bold">YES (3a) <br />REGISTER</label>
                            </div>
                            <div class="form-check pt-3">
                                <input asp-for="@Model.Report.WandScannedYes3b" class="form-check-input">
                                <label class="form-check-label fw-bold">YES (3b) <br />CREATE</label>
                            </div>
                            <div class="form-check mt-3">
                                <input asp-for="@Model.Report.WandScannedNo" class="form-check-input">
                                <label class="form-check-label fw-bold">NO (n/a)</label>
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="form-row mt-3">
                        <div class="col-6 col-md-4 text-center">
                            <img src="~/images/bodyCamera.jpg" alt="Body Camera" class="img-body-cam">
                        </div>
                        <div class="form-group col-6 col-md-8">
                            <h6>Does the BodyCamera, DashCAM, or other video footage part of this IR?</h6>
                            <div class="d-flex pt-3">
                                <div class="form-check form-check-inline mr-3">
                                    <label class="form-check-label fw-bold mr-2">YES</label>
                                    <input asp-for="@Model.Report.BodyCameraYes" class="form-check-input">
                                </div>
                                <div class="form-check form-check-inline">
                                    <input asp-for="@Model.Report.BodyCameraNo" class="form-check-input" checked="checked">
                                    <label class="form-check-label fw-bold">NO (n/a)</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Officer Details -->
    <div class="row mt-5 mt-md-3">
        <div class="col">
            <div class="card">
                <h4 class="card-header">Officer / Witness Details completing this form:</h4>
                <div class="card-body">
                    <div class="form-row">
                        <div class="form-group col-md-3">
                            <label asp-for="@Model.Report.Officer.FirstName"></label>
                            <input asp-for="@Model.Report.Officer.FirstName" class="form-control">
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="@Model.Report.Officer.LastName"></label>
                            <input asp-for="@Model.Report.Officer.LastName" class="form-control">
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="@Model.Report.Officer.Gender"></label>
                            <select asp-for="@Model.Report.Officer.Gender" asp-items="@Model.ViewDataService.Genders" class="form-control"></select>
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="@Model.Report.Officer.Phone"></label>
                            <input asp-for="@Model.Report.Officer.Phone" class="form-control">
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-3">
                            <div class="d-flex flex-row justify-content-between">
                                <label asp-for="@Model.Report.Officer.Position"></label>
                                <div class="custom-control custom-switch custom-control-inline" title="Switch between Patrol Car and Guards">
                                    <input type="checkbox" class="custom-control-input" id="positionfilter" name="positionfilter">
                                    <label class="custom-control-label" for="positionfilter">Patrol Car</label>
                                </div>
                            </div>
                            <select asp-for="@Model.Report.Officer.Position" asp-items="@Model.OfficerPosition" class="form-control"></select>
                            <input type="hidden" asp-for="@Model.Report.IsPositionPatrolCar" value="false" />
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="@Model.Report.Officer.Email"></label>
                            <input asp-for="@Model.Report.Officer.Email" class="form-control">
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="@Model.Report.Officer.LicenseNumber"></label>
                            <input asp-for="@Model.Report.Officer.LicenseNumber" class="form-control">
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="@Model.Report.Officer.LicenseState"></label>
                            <select asp-for="@Model.Report.Officer.LicenseState" asp-items="@Model.ViewDataService.LicenseStates" class="form-control"></select>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-3">
                            <label asp-for="@Model.Report.Officer.CallSign"></label>
                            <select asp-for="@Model.Report.Officer.CallSign" class="form-control">
                                @foreach (var item in @Model.ViewDataService.CallSign)
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="@Model.Report.Officer.GuardMonth"></label>
                            <select asp-for="@Model.Report.Officer.GuardMonth" asp-items="@Model.ViewDataService.GuardMonth" class="form-control"></select>
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="@Model.Report.Officer.NotifiedBy"></label>
                            <select asp-for="@Model.Report.Officer.NotifiedBy" class="form-control">
                                @foreach (var item in @Model.ViewDataService.NotifiedBy)
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="@Model.Report.Officer.Billing"></label>
                            <input asp-for="@Model.Report.Officer.Billing" class="form-control" placeholder="n/a">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Incident Date & Location -->
    <div class="row mt-5 mt-md-3">
        <div class="col">
            <div class="card">
                <h4 class="card-header">Incident Date / Location:</h4>
                <div class="card-body">
                    <div class="form-row">
                        <div class="form-group col-md-4 col-ipad-50">
                            <label asp-for="@Model.Report.DateLocation.IncidentDate"></label>
                            <div class="d-flex">
                                <input asp-for="@Model.Report.DateLocation.IncidentDate" class="form-control">
                                <span asp-validation-for="@Model.Report.DateLocation.IncidentDate"></span>
                            </div>
                        </div>
                        <div class="form-group col-md-4 col-ipad-50">
                            <label asp-for="@Model.Report.DateLocation.ReportDate"></label>
                            <div class="d-flex">
                                <input asp-for="@Model.Report.DateLocation.ReportDate" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")">
                            </div>
                            <span asp-validation-for="@Model.Report.DateLocation.ReportDate"></span>
                        </div>
                        <div class="form-group col-md-4 col-ipad-50">
                            <label> Do you seek financial reimbursement?</label>
                            <div class="d-flex p-2">
                                <div class="form-check form-check-inline mr-4">
                                    <label class="form-check-label font-weight-normal mr-2 ml-3">NO (n/a)</label>
                                    <input asp-for="@Model.Report.DateLocation.ReimbursementNo" class="form-check-input" checked="checked">
                                </div>
                                <div class="form-check form-check-inline">
                                    <input asp-for="@Model.Report.DateLocation.ReimbursementYes" class="form-check-input">
                                    <label class="form-check-label font-weight-normal">YES (& Receipt Attached)</label>
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-md-2 col-ipad-25">
                            <label>JOB No. & Times:</label>
                            <div class="d-flex flex-column">
                                <div class="form-group form-check-inline">
                                    <label asp-for="@Model.Report.DateLocation.JobNumber" class="font-weight-normal mr-2"></label>
                                    <input asp-for="@Model.Report.DateLocation.JobNumber" class="form-control">
                                </div>
                                <div class="form-group form-check-inline">
                                    <label asp-for="@Model.Report.DateLocation.JobTime" class="font-weight-normal mr-2"></label>
                                    <input type="time" asp-for="@Model.Report.DateLocation.JobTime" pattern="^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$" class="form-control inputs time">
                                </div>
                                <div class="form-group form-check-inline">
                                    <label asp-for="@Model.Report.DateLocation.Duration" class="font-weight-normal mr-2"></label>
                                    <input asp-for="@Model.Report.DateLocation.Duration" readonly class="form-control bg-light">
                                </div>
                                <div class="form-group form-check-inline">
                                    <label asp-for="@Model.Report.DateLocation.Travel" class="font-weight-normal mr-2"></label>
                                    <input asp-for="@Model.Report.DateLocation.Travel" readonly class="form-control bg-light">
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-md-2 col-ipad-25 pl-md-3">
                            <label>Patrol:</label>
                            <div class="d-flex flex-column">
                                <div class="form-check form-check-inline pb-4">
                                    <label asp-for="@Model.Report.DateLocation.PatrolExternal" class="form-check-label font-weight-normal mr-2"></label>
                                    <input asp-for="@Model.Report.DateLocation.PatrolExternal" class="form-check-input">
                                </div>
                                <div class="form-check form-check-inline">
                                    <label asp-for="@Model.Report.DateLocation.PatrolInternal" class="form-check-label font-weight-normal mr-2"></label>
                                    <input asp-for="@Model.Report.DateLocation.PatrolInternal" class="form-check-input">
                                </div>
                                <div class="pt-3" style="font-size:0.8rem">NOTE: If WAND points do not exist, or are missing you <u>must</u> take photos <b>AND</b> mention in notes that there are NO WAND points</div>
                            </div>
                        </div>
                        <div class="form-group col-md-8 col-ipad-100">
                            <label>Which site did the incident occur at?</label>
                            <div class="form-row">
                                <div class="col-md-5 pt-2">
                                    <label asp-for="@Model.Report.DateLocation.ClientType" class="font-weight-normal"></label>
                                    <select asp-for="@Model.Report.DateLocation.ClientType" asp-items="@Model.ViewDataService.GetUserClientTypes(AuthUserHelper.LoggedInUserId)" class="form-control"></select>
                                    <span asp-validation-for="@Model.Report.DateLocation.ClientType"></span>
                                </div>
                                <div class="col-md-5 pt-2">
                                    <label asp-for="@Model.Report.DateLocation.ClientSite" class="font-weight-normal"></label>
                                    <select asp-for="@Model.Report.DateLocation.ClientSite" class="form-control" asp-items="@Model.ClientSites"></select>
                                    <span asp-validation-for="@Model.Report.DateLocation.ClientSite"></span>
                                </div>
                                <div class="col-md-2 pt-2">
                                    <label asp-for="@Model.Report.DateLocation.ClientArea" class="font-weight-normal"></label>
                                    <select asp-for="@Model.Report.DateLocation.ClientArea" class="form-control">
                                        @foreach (var item in @Model.ViewDataService.ClientArea)
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-8 pt-2">
                                    <div class="d-flex flex-row justify-content-between">
                                        <label asp-for="@Model.Report.DateLocation.ClientAddress" class="font-weight-normal"></label>
                                        <div class="text-right">
                                            <input type="checkbox" asp-for="@Model.Report.DateLocation.ShowIncidentLocationAddress" class="form-check-input" />
                                            <label class="font-weight-normal">Incident Location</label>
                                        </div>
                                    </div>
                                    <input asp-for="@Model.Report.DateLocation.ClientAddress" class="form-control" />
                                    <input type="hidden" id="clientSiteAddress" />
                                </div>
                                <div class="col-md-2 pt-2">
                                    <label asp-for="@Model.Report.DateLocation.State" class="font-weight-normal"></label>
                                    <select asp-for="@Model.Report.DateLocation.State" asp-items="@Model.ViewDataService.States" class="form-control"></select>
                                </div>
                                <div class="col-md-2 pt-2">
                                    <label class="font-weight-normal">GPS Map Link</label>
                                    <div class="d-block">
                                        <a href="#" id="clientGpsLink" class="btn btn-outline-secondary disabled" target="_blank"><i class="fa fa-map"></i></a>
                                        <input type="hidden" id="clientSiteGps" />
                                    </div>
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-8 pt-2">
                                    <label asp-for="@Model.Report.DateLocation.ClientStatus" class="font-weight-normal"></label>
                                    <div class="row">
                                        <div class="col-md-3"><span><i class="fa fa-circle mr-2 client-status-circle" id="client_status_0"></i>Ongoing</span></div>
                                        <div class="col-md-3">
                                            <span><i class="fa fa-circle mr-2 client-status-circle" id="client_status_1"></i>Expiring</span>
                                            <span id="client_status_date_1" class="small"></span>
                                        </div>
                                        <div class="col-md-6">
                                            <span><i class="fa fa-circle mr-2 client-status-circle" id="client_status_2"></i>Expired</span>
                                            <span id="client_status_date_2" class="small"></span>
                                            <span class="small d-none text-danger" id="client_site_expiring_msg">Site is inactive – please confirm with Citywatch if guarding is actually required</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 pt-2">
                                    <label class="font-weight-normal">GPS Coordinates</label>
                                    <div id="liveGpsWrapper">n/a</div>
                                    <input asp-for="@Model.Report.DateLocation.ClientSiteLiveGps" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Main Number Plates/ID's of Incident -->
    <div class="row mt-5 mt-md-3">
        <div class="col">
            <div class="card">
                <h4 class="card-header">Main Number Plates/ID's of Incident:</h4>
                <div class="card-body">
                    <div class="form-row" id="plateloaded">

                        <div class="form-group  col-md-3 mr-5">
                            <label class="col-form-label">Plates Loaded into KV?:</label>
                            <div>
                                <div class="form-check form-check-inline mr-10">

                                    <input asp-for="@Model.Report.PlateLoadedYes" class="form-check-input">
                                    <label class="form-check-label font-weight-normal">Yes</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input asp-for="@Model.Report.PlateLoadedNo" class="form-check-input" checked="checked">
                                    <label class="form-check-label font-weight-normal">No</label>
                                </div>
                            </div>
                        </div>



                        <div class="form-group  mr-3" id="plateLoadedCarOrTruckRegoDetails">

                            <label>ID No. / Car or Truck Rego.</label>
                            <input class="form-control" type="text" asp-for="@Model.Report.VehicleRego" autocomplete="off" style="width:200px;" disabled />


                        </div>
                        <div class="form-group col-md-5 " id="plateLoadedCarOrTruckPlateDetails">


                            <label>ID / Plate (State or AU)</label>
                            <select class="form-control" disabled id="kvl_list_plates" asp-items="@viewDataService.GetKeyVehicleLogFieldsByType(KvlFieldType.Plate)" style="width:200px;">
                            </select>
                            <input type="hidden" asp-for="@Model.Report.PlateId" id="PlateId" />
                            <input type="hidden" id="CompanyName" />
                            <input type="hidden" id="TruckConfigure" />
                        </div>
                        <div class="form-group mt-4">

                            <button type="button" class="btn btn-primary mb-2" id="btnAddNewPlateLoadedEntry" disabled>+ Add Entry</button>

                        </div>


                    </div>
                    <div class="form-row">
                        <table class="table table-bordered table-striped" id="register_plate_loaded">
                            <thead>
                                <tr>
                                    <th hidden>SlNo</th>
                                    <th hidden>PlateId</th>
                                    <th>ID No. / Car or Truck Rego.</th>
                                    <th>ID / Plate (State or AU)</th>
                                    <th>Vehicle Config</th>
                                    <th>Company Name</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Feedback -->
    <div class="row mt-5 mt-md-3">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <div class="form-row">
                                <div class="col-md-5">
                                    <label><strong>Situation / Incident Report or Feedback:</strong></label>
                                    <div class="d-flex flex-row">
                                        <i class="fa fa-file-pdf-o text-danger mr-2"></i>
                                        <span style="font-size:0.8rem" class="d-block">
                                            NOTE: The IR Portal works on almost all tasks but it is not a Word Processor. For long reports or complex matters use Word first, then save as PDF, then run the IR, and add a short note, with your PDF report as an attachment
                                        </span>
                                    </div>
                                </div>

                                <div class="col-md-7">
                                    <div class="form-group row">




                                        <label class="col-form-label col-md-5">Serial Numbers of any Linked IR's:</label>
                                        <div class="col-md-7">
                                            <input type="text" class="form-control" asp-for="@Model.Report.LinkedSerialNos" placeholder="n/a">
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="col-md-3 ml-3">
                                            @*<select id="ddFeedbackTemplateType" class="form-control mb-3 mb-md-0" asp-items="@Html.GetEnumSelectList<FeedbackType>()"></select>*@
                                            @*Template type is directly taken from database -jisha-start*@
                                            <select id="ddFeedbackTemplateType" class="form-control mb-3 mb-md-0" asp-for="@Model.Report.FeedbackType">
                                                @foreach (var item in Model.ConfigDataProiver.GetFeedbackTypes())
                                                {
                                                    <option value="@item.Id">@item.Name</option>
                                                }
                                            </select>
                                            @*Template type is directly taken from database -jisha-end*@
                                        </div>
                                        <div class="col-md-8">
                                            @*<select id="ddFeedbackTemplate" class="form-control" asp-items="@Model.ViewDataService.GetFeedbackTemplatesByType(FeedbackType.General)"></select>*@
                                            @*Template type is directly taken from database -jisha-start*@
                                            <select id="ddFeedbackTemplate" class="form-control" asp-items="@Model.FeedBackTemplates" asp-for="@Model.Report.FeedbackTemplates"></select>
                                            @*Template type is directly taken from database -jisha-end*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <textarea asp-for="@Model.Report.Feedback" class="form-control" cols="30" rows="10"></textarea>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-md-6">
                            <label>Supervisor or person you reported this to <strong>and/or</strong> will email:</label>
                        </div>
                        <div class="col-md-6">
                            <input asp-for="@Model.Report.ReportedBy" class="form-control" placeholder="Name (Position)">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
<form method="post" id="cwsir-form-attachments">
    <!-- Attachments -->
    <div class="row mt-5 mt-md-3">
        <div class="col">
            <h4>File Attachments</h4>
            <i class="text-muted">Click Browse and select one or more files (.jpg, .jpeg, .png, .bmp, .pdf)</i>
            <div class="custom-file mt-3">
                <input type="file" id="file_upload" class="custom-file-input" accept=".jpg, .jpeg, .png, .bmp, .pdf" multiple>
                <label class="custom-file-label" for="attachments">Choose file to upload</label>
            </div>
        </div>
    </div>
    <div class="row mt-2">
        <div class="col-md-6">
            <ul id="files-to-upload" class="list-group d-block w-auto pt-2"></ul>
        </div>
    </div>
</form>
<!-- Submit Form -->
<div class="row mt-3">
    <div class="col">
        <div asp-validation-summary="All" id="validation-summary"></div>
        <div class="custom-control custom-switch mb-3">
            <input type="checkbox" class="custom-control-input" id="Report.DisableEmail" name="Report.DisableEmail">
            <label class="custom-control-label" for="Report.DisableEmail">Download completed IR without sending emails</label>
        </div>
        <button type="button" class="btn btn-primary mr-4 mb-2" id="btnSumbit">Submit Incident Report</button>
        <a href="@Url.Content("~/Pdf/Template/IR_Form_Template.pdf")" target="_blank" class="btn btn-outline-primary mb-2">Download Blank IR Template</a>
    </div>
</div>
<div class="row mt-3">
    <div class="col">
        <div style="color:red;">
            <p class="mb-md-1">
                Clicking <u><b>SUBMIT</b></u> will automatically email CWS-HQ & Client your IR as a version 1.0 and auto-dump into Dropbox for you.<br />
            </p>
            <p class="mb-md-1">
                A completed IR as a PDF (Offline) <u><b>OR</b></u> updates to the original IR can also be manually emailed to: <span style="color:#0366d6;"><b>cws-ir@citywatchsecurity.com.au</b></span> <br />
            </p>
            <p class="mb-md-1">
                Updates, additional pages, and corrections, may occur post the initial release and will have a higher version number
            </p>
        </div>
    </div>
</div>
@section PageHeader {
    <h3 class="text-center">INCIDENT REPORT & FEEDBACK FORM</h3>
}
<div class="modal" tabindex="-1" role="dialog" id="msg-modal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="fa fa-exclamation-circle text-danger" aria-hidden="true"></i> Error</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Submit failed. Please fill all required fields</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-primary" data-dismiss="modal">Ok</button>
            </div>
        </div>
    </div>
</div>
<!--    Vehicle Profiles Modal -->
<div class="modal" tabindex="-1" role="dialog" id="incident-report-profiles-modal" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="fa fa-gear mr-2" aria-hidden="true"></i>Visitor Profiles. ID No / Vehicle Rego : <span id="kvl-profile-title-rego"></span></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row m-0 mb-2">
                    <div class="col-md-12">
                        <small class="form-text text-primary mb-1">
                            <i class="fa fa-info-circle mr-1"></i>Click any row below to copy Company Name and Person Type. Then click Add Record.
                        </small>
                        <div class="form-inline">
                            <label>Create a new record with Person Name:</label>
                            <input class="form-control mx-2" type="text" id="driver_name" value="Unknown" />
                            <button class="btn btn-success" id="btn_duplicate_profile">Add Record</button>
                        </div>
                        <div class="validation-summary-errors my-1" asp-validation-summary="All" id="duplicate_profile_status"></div>
                    </div>
                </div>
                <div class="row m-0">
                    <div class="col-md-12">
                        <table class="table table-bordered" width="100%" id="incident_reports_vehicle_log_profiles">
                            <thead>
                                <tr>
                                    <th rowspan="2" hidden></th>
                                    <th rowspan="2"><center>ID / Plate</center></th>
                                    <th rowspan="2"><center>Company Name</center></th>
                                    <th colspan="2"><center>Individual</center></th>
                                    <th rowspan="2"></th>
                                </tr>
                                <tr>
                                    <th>Person Name</th>
                                    <th>Person Type</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>

    window.addEventListener('load', onWindowLoad);
    document.getElementById("Report_Officer_Position").addEventListener('change', onReportOfficerPositionChange);
    document.getElementById("Report_Officer_Phone").addEventListener('blur', onPhoneNoBlur);
    document.getElementById("Report_WandScannedYes3a").addEventListener('change', onWandScannedChange);
    document.getElementById("Report_WandScannedYes3b").addEventListener('change', onWandScannedChange);
    document.getElementById("Report_WandScannedNo").addEventListener('change', onWandScannedChange);
    document.getElementById("Report_DateLocation_ReimbursementYes").addEventListener('change', onReimbursementChange);
    document.getElementById("Report_DateLocation_ReimbursementNo").addEventListener('change', onReimbursementChange);
    document.getElementById("Report_BodyCameraYes").addEventListener('change', onBodyCameraChange);
    document.getElementById("Report_BodyCameraNo").addEventListener('change', onBodyCameraChange);
    document.getElementById("Report_DateLocation_IncidentDate").addEventListener('change', onIncidentDateTimeChange);
    document.getElementById("Report_DateLocation_ReportDate").addEventListener('change', onReportDateTimeChange);
    document.getElementById("Report_DateLocation_JobTime").addEventListener('change', onJobTimeChange);
    document.getElementById("file_upload").addEventListener('change', onFileUpload);
    //document.getElementById("cwsir-form").addEventListener('submit', onFormSubmit);
    document.getElementById("btnSumbit").addEventListener('click', onbtnSumbitClick);
    document.getElementById("clientGpsLink").addEventListener('click', onGpsLinkClick);
    document.getElementById("Report_DateLocation_ShowIncidentLocationAddress").addEventListener('change', onShowLiveAddressChange);
    document.getElementById("Report_EventType_Other").addEventListener('change', onEventTypeOtherChange);
    document.getElementById("Report_EventType_SiteColour").addEventListener('change', onEventTypeSiteColourChange);
    document.getElementById("Report_PlateLoadedNo").addEventListener('change', onPlateLoadedChange);
    document.getElementById("Report_PlateLoadedYes").addEventListener('change', onPlateLoadedChange);
    document.getElementById("Report_VehicleRego").addEventListener('change', onPlateLoadedChange);


    function onWindowLoad(event) {
        setAllControlsForIrFromPreviousIR();
        const autoCompleteLocation = new google.maps.places.Autocomplete(document.getElementById("Report_DateLocation_ClientAddress"), {
            types: ['address'],
            componentRestrictions: { country: 'AU' },
            fields: ['place_id', 'geometry', 'name']
        });
        autoCompleteLocation.addListener('place_changed', function () {
            const place = this.getPlace();
            if (place.geometry) {
                var lat = place.geometry.location.lat();
                var lon = place.geometry.location.lng();
                const liveGps = lat + ',' + lon;
                document.getElementById("Report_DateLocation_ClientSiteLiveGps").value = liveGps;
                toggleClientGpsLink(true, liveGps);
            }
        });
    }

    function onReportOfficerPositionChange(event) {
        const isPositionPatrolCar = this.value.length !== 0 && document.getElementById('positionfilter').checked;
        document.getElementById("Report_IsPositionPatrolCar").value = isPositionPatrolCar;
    }

    function onGpsLinkClick(event) {
        if (this.href === window.location.href + '#')
            event.preventDefault();
    }

    function onIncidentDateTimeChange(event) {
        onReportDateTimeChange();
        onJobTimeChange();
    }

    function onReportDateTimeChange(event) {
        var incidentdate = document.getElementById("Report_DateLocation_IncidentDate").value;
        var reportdate = document.getElementById("Report_DateLocation_ReportDate").value;
        if (incidentdate != "" && reportdate != "") {
            var datediff = Date.parse(reportdate) - Date.parse(incidentdate);
            var mins = Math.abs((datediff / 1000) / 60);
            document.getElementById("Report_DateLocation_Duration").value = mins;
        }
    }

    function onJobTimeChange(event) {
        const incidentdate = document.getElementById("Report_DateLocation_IncidentDate").value;
        const jobtime = document.getElementById("Report_DateLocation_JobTime").value;
        if (incidentdate !== "" && jobtime !== "") {
            const arJobTime = jobtime.split(':');
            const incidentdateTime = new Date(incidentdate);
            const jobDateTime = new Date(incidentdateTime.getFullYear(), incidentdateTime.getMonth(), incidentdateTime.getDate(), parseInt(arJobTime[0]), parseInt(arJobTime[1]));

            if (jobDateTime > incidentdateTime)
                jobDateTime.setDate(jobDateTime.getDate() - 1);

            let diff = incidentdateTime - jobDateTime;
            document.getElementById("Report_DateLocation_Travel").value = diff / 60000;
        }
    }

    function onDeleteAttachment(event) {
        if (confirm('Are you sure want to remove this attachment?')) {
            var target = event.target;
            target.parentNode.parentNode.removeChild(target.parentNode);
        }
    }

    function onPhoneNoBlur(event) {
        if (this.value == "") {
            this.value = "+61 4";
        }
    }

    function getLiveGpsCoordinates() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                const liveGps = position.coords.latitude + ',' + position.coords.longitude;
                const ahrefElem = getGpsAsHyperLink(liveGps);
                document.getElementById("liveGpsWrapper").innerHTML = ahrefElem;
                document.getElementById("Report_DateLocation_ClientSiteLiveGps").value = liveGps;
            });
        }
        else
            console.log("Geolocation is not supported by this browser.");
    }

    function onWandScannedChange(event) {
        document.getElementById("liveGpsWrapper").innerHTML = "n/a";
        document.getElementById("Report_DateLocation_ClientSiteLiveGps").value = "";

        if (this.id == "Report_WandScannedYes3a" && this.checked) {
            document.getElementById("Report_WandScannedYes3b").checked = false;
            document.getElementById("Report_WandScannedNo").checked = false;
        }

        if (this.id == "Report_WandScannedYes3b" && this.checked) {
            document.getElementById("Report_WandScannedYes3a").checked = false;
            document.getElementById("Report_WandScannedNo").checked = false;

            getLiveGpsCoordinates();
        }

        if (this.id == "Report_WandScannedNo" && this.checked) {
            new MessageModal({ message: "Only click N/A if you do not have a Smart WAND – are you sure you want to continue?" }).showWarning();
            document.getElementById("Report_WandScannedYes3a").checked = false;
            document.getElementById("Report_WandScannedYes3b").checked = false;
        }
    }

    function onEventTypeOtherChange(event) {
        if (this.id == "Report_EventType_Other" && this.checked) {
            new MessageModal({ message: "Are you sure situation is OTHER and not a more accurate option above?" }).showWarning();
        }
    }

    function onEventTypeSiteColourChange(event) {
        document.getElementById("Report_SiteColourCodeId").disabled = !this.checked;
        document.getElementById("Report_SiteColourCodeId").value = '';
        document.getElementById("Report_SiteColourCode").value = '';
        document.getElementById("Report_Feedback").value = '';
        document.getElementById("ddFeedbackTemplateType").value = 1;
        document.getElementById("ddFeedbackTemplateType").dispatchEvent(new Event('change'));
    }

    function onReimbursementChange(event) {
        const yesCheckId = "Report_DateLocation_ReimbursementYes";
        const noCheckId = "Report_DateLocation_ReimbursementNo";

        if (this.id == yesCheckId && this.checked) {
            document.getElementById(noCheckId).checked = false;
        }

        if (this.id == noCheckId && this.checked) {
            document.getElementById(yesCheckId).checked = false;
        }

        if (!document.getElementById(yesCheckId).checked && !document.getElementById(noCheckId).checked) {
            document.getElementById(noCheckId).checked = true;
        }
    }

    function onBodyCameraChange(event) {
        const bodyCameraYes = "Report_BodyCameraYes";
        const bodyCameraNo = "Report_BodyCameraNo";

        if (this.id == bodyCameraYes && this.checked) {
            document.getElementById(bodyCameraNo).checked = false;
        }

        if (this.id == bodyCameraNo && this.checked) {
            document.getElementById(bodyCameraYes).checked = false;
        }

        if (!document.getElementById(bodyCameraYes).checked &&
            !document.getElementById(bodyCameraNo).checked) {
            document.getElementById(bodyCameraNo).checked = true;
        }
    }

    function onFileUpload(event) {
        const fileUpload = this;
        if (fileUpload.files.length > 0) {

            let arIndex = [];
            const attachmentList = document.getElementById('files-to-upload').getElementsByTagName('li');
            for (let i = 0; i < attachmentList.length; i++)
                arIndex.push(parseInt(attachmentList[i].getAttribute('data-index')));
            let attachIndex = arIndex.length > 0 ? Math.max(...arIndex) + 1 : 0;

            for (let i = 0; i < fileUpload.files.length; i++, attachIndex++) {
                const file = fileUpload.files.item(i);

                const attachment_id = 'attach_' + attachIndex;
                const li = document.createElement('li');
                li.id = attachment_id;
                li.className = 'list-group-item';
                li.dataset.index = attachIndex;
                let liText = document.createTextNode(file.name);

                const icon = document.createElement("i");
                icon.className = 'fa fa-circle-o-notch fa-spin ml-2 text-success';
                icon.title = 'Uploading...';
                icon.style = 'cursor:pointer';

                li.appendChild(liText);
                li.appendChild(icon);
                document.getElementById('files-to-upload').appendChild(li);

                // upload file to server
                const fileForm = new FormData();
                fileForm.append('attachments', fileUpload.files.item(i))
                fileForm.append('attach_id', attachment_id);
                fetch('/Incident/Register?handler=Upload', {
                    method: 'POST',
                    headers: { 'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value },
                    body: fileForm,
                }).then(response => response.json())
                    .then(result => {
                        const icon = document.getElementById(result.attachmentId).getElementsByTagName('i').item(0);
                        if (result.success) {
                            icon.className = 'fa fa-trash-o ml-2 text-danger';
                            icon.onclick = onDeleteAttachment;
                            icon.title = 'Delete';
                        } else {
                            icon.className = 'fa fa-exclamation-triangle ml-2 text-warning';
                            icon.title = 'Error';
                        }
                    }).catch(error => {

                    });
            }
        }
    }

    function eventTypeSelected() {
        const eventType = document.getElementsByClassName('event-type');
        for (let i = 0; i < eventType.length; i++) {
            if (eventType[i].checked) {
                return true;
            }
        }
        return false;
    }

    function smartWandScanned() {
        const yes3aChecked = document.getElementById('Report_WandScannedYes3a').checked;
        const yes3bChecked = document.getElementById('Report_WandScannedYes3b').checked;
        const noChecked = document.getElementById('Report_WandScannedNo').checked;

        if (yes3aChecked || yes3bChecked || noChecked)
            return true;

        return false;
    }
    function truckRegistrationNumberIsValid() {
        const truckregistrationNumber = document.getElementById('Report_VehicleRego').value.trim();
        if (!truckregistrationNumber) {
            return false;
        }
        return true;
    }
    function plateIdIsValid() {
        const plateid = document.getElementById('PlateId').value.trim();
        if (plateid == 0) {
            return false;
        }
        return true;
    }

    function jobNumberIsValid() {
        const isSecMobPatrolCar = document.getElementById("Report_IsPositionPatrolCar").value;
        const jobNumber = document.getElementById('Report_DateLocation_JobNumber').value.trim();
        if (isSecMobPatrolCar === 'true' && !jobNumber)
            return false;

        return true;
    }

    function patrolOffsiteDateIsValid() {
        const incidentdate = document.getElementById("Report_DateLocation_IncidentDate").value;
        const reportdate = document.getElementById("Report_DateLocation_ReportDate").value;

        if (!incidentdate) return true;
        if (new Date(incidentdate) < new Date(reportdate)) return true;

        return false;
    }

    function siteColourCodeIsValid() {
        const isSiteColourCodeEventType = document.getElementById("Report_EventType_SiteColour").checked;
        return !isSiteColourCodeEventType || (isSiteColourCodeEventType && document.getElementById("Report_SiteColourCodeId").value !== '');
    }
    function siteKVLCheckValid() {
        const isPlateAlert = document.getElementById("Report_PlateLoadedYes").checked;
        var rowcount = $("#register_plate_loaded tr").length;

        return ((!isPlateAlert) || rowcount > 1);
    }


    function onbtnSumbitClick(event) {

        const result = validateForm();
        if (!result.isValid) {
            $('#msg-modal').modal();
            displayValidationSummary(result.errors);
            event.preventDefault();
            return false;
        }

        const mainForm = document.getElementById("cwsir-form");
        const attachments = mainForm.querySelectorAll('input[name="Report.Attachments"]');
        if (attachments.length > 0) {
            attachments.forEach(function (item) {
                mainForm.removeChild(item);
            });
        }

        const attachmentList = document.getElementById('files-to-upload').getElementsByTagName('li');
        for (let i = 0; i < attachmentList.length; i++) {
            const input = document.createElement('input');
            input.setAttribute('name', 'Report.Attachments');
            input.setAttribute('value', attachmentList[i].innerText.trim());
            input.setAttribute('type', 'hidden');
            mainForm.appendChild(input);
        }

        const input = document.createElement('input');
        input.setAttribute('name', 'Report.DisableEmail');
        input.setAttribute('value', document.getElementById("Report.DisableEmail").checked);
        input.setAttribute('type', 'hidden');
        mainForm.appendChild(input);
        // var plateLoaded = [];
        var plateLoaded;
        var i = 1;
        document.getElementById('loader').style.display = 'block';
        $('#register_plate_loaded tr:gt(0)').each(function () {

            var plateid = $(this).find("td").eq(1).text();

            var truckNo = $(this).find("td").eq(2).text();

            if ((truckNo !== null || truckNo != '') && (plateid !== null || plateid !== 'undefined')) {
                plateLoaded = {
                    PlateId: plateid,
                    TruckNo: truckNo
                }
            }
            i = i + 1;

        });
        fetch('/Incident/Register?handler=submit', {
            method: 'POST',
            headers: { 'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value },

            body: new FormData(mainForm),
        }).then(response => response.json())
            .then(result => {
                document.getElementById('loader').style.display = 'none';
                if (result.success) {
                    window.location.replace('/Incident/Notify');
                } else {
                    result.errors.forEach(function (item) {
                        const span = document.querySelector("span[data-valmsg-for='" + item.propertyName + "']");
                        span.innerText = item.errorList[0];
                        span.className = "field-validation-error";
                    });
                    displayValidationSummary(result.errors)
                }
            }).catch(error => {

            });
        //$.ajax({
        //    url: '/Incident/Register?handler=submit',
        //    data: { $('#cwsir-form').serialize(), 'plateLoaded': plateLoaded },
        //    type: 'POST',
        //    dataType:'json',
        //    headers: { 'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() },
        //    body: new FormData(mainForm),
        //}).done(function (result) {
        //    document.getElementById('loader').style.display = 'none';
        //            if (result.success) {
        //                window.location.replace('/Incident/Notify');
        //            } else {
        //                result.errors.forEach(function(item){
        //                    const span = document.querySelector("span[data-valmsg-for='" + item.propertyName + "']");
        //                    span.innerText = item.errorList[0];
        //                    span.className = "field-validation-error";
        //                });
        //                displayValidationSummary(result.errors)
        //            }
        //});
    }

    function validateForm() {
        let errors = [];

        if (!eventTypeSelected()) {
            errors.push({ field: 'Event Type', errorList: ['Please select an event type'] });
        }

        if (!smartWandScanned()) {
            errors.push({ field: 'Smart Wand Scanned', errorList: ['Please select "was smart wand scanned?"'] });
        }

        if (!jobNumberIsValid()) {
            errors.push({ field: 'Job Number', errorList: ['Please fill "job number"'] });
        }

        if (!patrolOffsiteDateIsValid()) {
            errors.push({ field: 'Date of Incident', errorList: ['Date / Time of Patrol Onsite must be less than Patrol Offsite'] });
        }

        if (!siteColourCodeIsValid()) {
            errors.push({ field: 'Site Colour Code', errorList: ['Please select Site Colour Code'] });
        }
        if (!siteKVLCheckValid()) {
            errors.push({ field: 'Plate Lodaed', errorList: ['Please add the plates if you click on the Yes checkbox in KV, Otherwise click on No'] });
        }
        const requiredFields = ['Report_DateLocation_ReportDate', 'Report_DateLocation_ClientType',
            'Report_DateLocation_ClientSite', 'Report_Officer_GuardMonth'];
        requiredFields.forEach(function (id) {
            let field = document.getElementById(id);
            if (field.value === '') {
                errors.push({ field: id, errorList: [field.getAttribute('data-val-required')] });
            }
        });

        return { isValid: errors.length === 0, errors: errors };
    }
    function validatePlateIds() {
        let errors = [];


        if (!truckRegistrationNumberIsValid()) {
            errors.push({ field: 'Truck Registration Number', errorList: ['Please fill the ID or Truck Registation Number'] });
        }

        if (!plateIdIsValid()) {
            errors.push({ field: 'Plates Selected', errorList: ['Please select the Plate ID'] });
        }



        const requiredFields = ['Report_VehicleRego', '#PlateId'];
        requiredFields.forEach(function (id) {
            let field = document.getElementById(id);
            if (field.value === '') {
                errors.push({ field: id, errorList: [field.getAttribute('data-val-required')] });
            }
        });

        return { isValid: errors.length === 0, errors: errors };
    }

    function displayValidationSummary(errors) {
        const summaryDiv = document.getElementById('validation-summary');
        summaryDiv.className = "validation-summary-errors";
        summaryDiv.querySelector('ul').innerHTML = '';
        errors.forEach(function (item) {
            const li = document.createElement('li');
            li.appendChild(document.createTextNode(item.errorList[0]));
            summaryDiv.querySelector('ul').appendChild(li);
        });
    }

    function toggleClientGpsLink(enabled, gps) {
        if (enabled === true) {
            document.getElementById('clientGpsLink').href = 'https://www.google.com/maps?q=' + gps;
            document.getElementById("clientGpsLink").classList.remove("disabled");
            document.getElementById('clientGpsLink').classList.replace('btn-outline-secondary', 'btn-outline-success');
            document.getElementById('clientSiteGps').value = gps;
        } else {
            document.getElementById('clientGpsLink').href = '#';
            document.getElementById("clientGpsLink").classList.add("disabled");
            document.getElementById('clientGpsLink').classList.replace('btn-outline-success', 'btn-outline-secondary');
            document.getElementById('clientSiteGps').value = '';
        }
    }

    function onShowLiveAddressChange(event) {
        document.getElementById("Report_DateLocation_ClientAddress").value = '';
        toggleClientGpsLink(false);

        if (!this.checked) {
            const address = document.getElementById('clientSiteAddress').value;
            const gps = document.getElementById('clientSiteGps').value;

            document.getElementById('Report_DateLocation_ClientAddress').value = address;
            if (gps === '') toggleClientGpsLink(false);
            else toggleClientGpsLink(true, gps);
        }
    }

    function onPlateLoadedChange(event) {
        const yesPlateId = "Report_PlateLoadedYes";
        const noPlateId = "Report_PlateLoadedNo";

        if (this.id == yesPlateId && this.checked) {
            document.getElementById(noPlateId).checked = false;
            $('#btnAddNewPlateLoadedEntry').attr('disabled', false);
            $('#Report_VehicleRego').attr('disabled', false);
            $('#kvl_list_plates').attr('disabled', 'disabled');

        }

        if (this.id == noPlateId && this.checked) {
            document.getElementById(yesPlateId).checked = false;

            $('#btnAddNewPlateLoadedEntry').attr('disabled', 'disabled');
            $('#Report_VehicleRego').val('');
            $('#Report_VehicleRego').attr('disabled', 'disabled');
            $('#kvl_list_plates').attr('disabled', 'disabled');
            $('#kvl_list_plates').val('');
            DeleteFullPlateIds();

        }

        if (!document.getElementById(yesPlateId).checked && !document.getElementById(noPlateId).checked) {
            document.getElementById(noPlateId).checked = true;
        }
    }
    function DeleteFullPlateIds() {
        if ($('#register_plate_loaded  tr').length > 1) {
            var obj =
            {
                PlateId: 0,
                TruckNo: null,
                LogId: 0

            }
            $.ajax({
                url: '/Incident/Register?handler=DeleteFullPlateLoaded',
                data: { 'report': obj, 'Count': $('#register_plate_loaded  tr').length },
                type: 'POST',
                headers: { 'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() },
            }).done(function (result) {
                var rowCount = $('#register_plate_loaded  tr').length;
                for (var i = rowCount; i > 1; i--) {
                    $('#register_plate_loaded  tr:last').remove();
                }
            })
            return false;
        }
    }
    document.getElementById("btnAddNewPlateLoadedEntry").addEventListener('click', onbtnAddNewPlateLoadedEntryClick);
    document.getElementById("Report_VehicleRego").addEventListener('keyup', vehicleRegoToUpperCase);
    document.getElementById("Report_VehicleRego").addEventListener('keypress', vehicleRegoValidateSplChars);
    document.getElementById("Report_VehicleRego").addEventListener('blur', vehicleRegoDisableKeyListPlates);

    document.getElementById("kvl_list_plates").addEventListener('change', kvlListPlatesChange);
    //document.getElementById("btn_delete_plate").addEventListener('click', deletePlates);

    function kvlListPlatesChange() {

        const option = $(this).find(":selected");

        if (option.val() !== '') {
            $('#PlateId').val(option.val());
        }
    }
    var emp = null;
    function onbtnAddNewPlateLoadedEntryClick() {
        if ($('#Report_VehicleRego').val() != '') {
            if ($('#PlateId').val() != '') {
                //const result = validatePlateIds();
                //if (!result.isValid) {
                //    $('#msg-modal').modal();
                //    displayValidationSummary(result.errors);
                //    event.preventDefault();
                //    return false;
                //}
                var obj =
                {
                    PlateId: $('#PlateId').val(),
                    TruckNo: $('#Report_VehicleRego').val(),
                    IncidentReportId: 0,
                    LogId: 0

                }
                $.ajax({
                    url: '/Incident/Register?handler=IfPlateExists',
                    data: { 'PlateId': $('#PlateId').val(), 'TruckNo': $('#Report_VehicleRego').val() },
                    type: 'GET',
                    headers: { 'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() },
                }).done(function (result1) {

                    if (result1.count == 0) {
                        $.ajax({
                            url: '/Incident/Register?handler=PlateLoaded',
                            data: { 'report': obj },
                            type: 'POST',
                            headers: { 'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() },
                        }).done(function (result) {
                            if (result.status) {
                                if (result.message !== '') {
                                    getPlatesLoaded();
                                    //showStatusNotification(true, 'Company details modified successfully');

                                }

                            } else {
                                displayGuardValidationSummary(result.message);
                            }
                        });
                    }
                    else {
                        alert("Entry Already Exists")
                    }
                });
            }
            else {
                alert("Please Enter The Correct Truck Registration Number And Select the Plates From The List Appear")
            }
        }
        else {
            alert("Please Enter The Truck Registration Number")
        }


    }

    function getPlatesLoaded() {
        //var obj =
        //{
        //    PlateId: $('#PlateId').val(),
        //    TruckNo: $('#Report_VehicleRego').val(),
        //    IncidentReportId: 0,
        //    LogId: 0

        //}


        if ($('#register_plate_loaded  tr').length > 1) {
            var rowCount = $('#register_plate_loaded  tr').length;
            $('#register_plate_loaded  tr:last').after('<tr><td hidden>' + rowCount + '</td>' +
                '<td hidden>' + $('#PlateId').val() + '</td>' +
                '<td>' + $("#Report_VehicleRego").val() + '</td>' +

                '<td>' + $('#kvl_list_plates').find(":selected").text() + ' </td>' +
                '<td>' + $('#TruckConfigure').val() + ' </td>' +
                '<td>' + $("#CompanyName").val() + ' </td>' +
                '<td> <button  class= "btn btn-outline-danger" id = "btn_delete_plate"> <i class="fa fa-trash"> </i></button >  </td>' +
                '</tr > ');
            // CLEAR ALL TEXTBOXES.
            $('#PlateId').val('');
            $("#Report_VehicleRego").val('');
            $('#kvl_list_plates').val('');
        }
        else {
            var rowCount = $('#register_plate_loaded  tr').length;
            $('#register_plate_loaded  tr:last').after('<tr><td hidden>' + rowCount + '</td>' +
                '<td hidden>' + $('#PlateId').val() + '</td>' +
                '<td>' + $("#Report_VehicleRego").val() + '</td>' +

                '<td>' + $('#kvl_list_plates').find(":selected").text() + ' </td>' +
                '<td>' + $('#TruckConfigure').val() + ' </td>' +
                '<td>' + $("#CompanyName").val() + ' </td>' +
                '<td>' + '<button  class= "btn btn-outline-danger " id = "btn_delete_plate"> <i class="fa fa-trash"> </i></button >' + '</td>' +
                '</tr >');
            // CLEAR ALL TEXTBOXES.
            $('#PlateId').val('');
            $("#Report_VehicleRego").val('');
            $('#kvl_list_plates').val('');
            $('#kvl_list_plates').attr('disabled', 'disabled');
        }



    }
    function deletePlates() {

        var obj =
        {
            PlateId: $('#PlateId').val(),
            TruckNo: $('#Report_VehicleRego').val(),
            LogId: 0

        }

        $.ajax({
            url: '/Incident/Register?handler=DeletePlateLoaded',
            data: { 'report': obj },
            type: 'POST',
            headers: { 'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() },
        }).done(function (result) {
            if (result.status) {
                if (result.message !== '') {
                    getPlatesLoaded();
                    // showStatusNotification(true, 'Company details modified successfully');

                }

            } else {
                displayGuardValidationSummary(result.message);
            }
        });

    }
    function vehicleRegoDisableKeyListPlates() {
        const vehicleRegoHasVal = $(this).val() !== '';
        $('#kvl_list_plates').attr('disabled', !vehicleRegoHasVal);
        $('#kvl_list_plates').attr('disabled', 'disabled');
        if (!vehicleRegoHasVal) {
            // TODO: clear previous auto populated profile values
            $('#Report_VehicleRego').val('');
        }
        emp = $(this).val();
    }


    //})
    function vehicleRegoToUpperCase() {
        let regoToUpper = $(this).val().toUpperCase();
        $(this).val(regoToUpper);
    }

    function vehicleRegoValidateSplChars(e) {
        //  blocking special charactors
        if (e.which != 35 && e.which == 32 && e.which < 48 ||
            (e.which > 57 && e.which < 65) ||
            (e.which > 90 && e.which < 97) ||
            e.which > 122) {
            e.preventDefault();
        }
    }

    /* Code For relaod the Site Location details create Ir  from Previous Ir Start*/

    /** Client Site Status & Status Date **/
    const clientSiteStatuses = {
        data: [
            { id: 0, text: 'Ongoing', color: 'text-success' },
            { id: 1, text: 'Expiring', color: 'text-warning' },
            { id: 2, text: 'Expired', color: 'text-danger' }
        ],
        getText: function (value) {
            const item = this.data.find((e) => e.id === value);
            return item ? item.text : '';
        },
        getValue: function (text) {
            const item = this.data.find((e) => e.text === text);
            return item ? item.id : -1;
        },
        getColorByText: function (text) {
            const item = this.data.find((e) => e.text === text);
            return item ? item.color : '';
        },
        getColorByValue: function (value) {
            const item = this.data.find((e) => e.id === value);
            return item ? item.color : '';
        }
    }

    function setSelectedClientStatus(clientSite) {
        $('#client_status_0').removeClass('text-success');
        $('#client_status_1').removeClass('text-warning');
        $('#client_status_2').removeClass('text-danger');
        $('#client_status_date_1').text('');
        $('#client_status_date_2').text('');
        $('#client_site_expiring_msg').removeClass('d-block').addClass('d-none');


        let status = clientSite.status;
        if (status === 1 && new Date(clientSite.statusDate) < new Date())
            status = 2;
        $('#client_status_' + status).addClass(clientSiteStatuses.getColorByValue(status));

        const calIcon = '<i class="fa fa-calendar mx-2"></i>'
        if (status === 1) {
            $('#client_status_date_1').html(calIcon + clientSite.formattedStatusDate);
        }
        else if (status === 2) {
            $('#client_site_expiring_msg').addClass('d-block');
            $('#client_status_date_2').html(calIcon + clientSite.formattedStatusDate);
        }
    }
    /* Code For relaod the Site Location details create Ir  from Previous Ir Start 04102023*/
    var queryString = window.location.search;
    // Parse the query string into an object
    var params = new URLSearchParams(queryString);
    // Get the value of the 'name' parameter
    var reuse = params.get('reuse');
    function setAllControlsForIrFromPreviousIR() {
        if (reuse != null) {
            $.ajax({
                url: '/Incident/Register?handler=IrDetails',
                type: 'GET'
            }).done(function (data) {
                if (data.success) {
                    if (data.isWandScannedYes3b) {
                        getLiveGpsCoordinates();
                    }
                    $('#Report_DateLocation_ClientAddress').val(data.clientSite.address);
                    $('#Report_DateLocation_State').val(data.clientSite.state);
                    $('#Report_Officer_Billing').val(data.clientSite.billing);
                    if (data.clientSite.gps) toggleClientGpsLink(true, data.clientSite.gps);
                    else toggleClientGpsLink(false);
                    setSelectedClientStatus(data.clientSite);
                    $('#Report_DateLocation_ShowIncidentLocationAddress').prop('checked', false);
                    $('#clientSiteAddress').val(data.clientSite.address);
                    $('#clientSiteGps').val(data.clientSite.gps);
                    if (data.bodyCameraYes) {

                        document.getElementById('Report_BodyCameraYes').checked = true;
                        document.getElementById('Report_BodyCameraNo').checked = false;

                    }
                    else {
                        document.getElementById('Report_BodyCameraNo').checked = true;
                        document.getElementById('Report_BodyCameraYes').checked = false;
                    }
                    if (data.reimbursementYes) {

                        document.getElementById('Report_DateLocation_ReimbursementYes').checked = true;
                        document.getElementById('Report_DateLocation_ReimbursementNo').checked = false;

                    }
                    else {
                        document.getElementById('Report_DateLocation_ReimbursementNo').checked = true;
                        document.getElementById('Report_DateLocation_ReimbursementYes').checked = false;
                    }
                    if (data.isPositionPatrolCar) {

                        document.getElementById('positionfilter').checked = true;

                    }
                    else {
                        document.getElementById('positionfilter').checked = false;
                    }

                    if (data.isSiteColorChecked)
                        document.getElementById("Report_SiteColourCodeId").disabled = false
                 

                }
            }).fail(function () {
            });


        }

        /* Code For relaod the Site Location details create Ir  from Previous Ir end*/
    }

</script>
<partial name="_MessagePopup" />
@section scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://maps.googleapis.com/maps/api/js?key=@ApiKey&libraries=places"></script>
}